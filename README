System info
===========

zeta is an Intel NUC6i3SYB, with a dual-core Core i3-6100U, integrated
i915 GPU, 16G RAM, Intel e1000e NIC, Intel AC8260 wifi and a 932G NVMe SSD.

The SSD is GPT partitioned with a 512M vfat /boot, and the kernel is booted
directly from /boot/efi/boot/bootx64.efi by the UEFI BIOS. The command line

  loglevel=2 root=PARTLABEL=root

is compiled into the kernel to avoid the need for a manually-configured
UEFI boot entry.

We use an ext4 root filesystem, with 1G zram swap to limit SSD wear.

Build the kernel with

  cp config linux/.config
  make -C linux olddefconfig bzImage
  cp linux/arch/x86/boot/bzImage boot/linux.efi


Upstream firmware binaries
--------------------------

The CPU microcode firmware/intel-ucode/* is obtained from

  https://github.com/intel/Intel-Linux-Processor-Microcode-Data-Files

The i915 GPU blobs firmware/i915/skl_*.bin and Intel AC8260 wifi firmware
firmware/iwlwifi-8000C-*.ucode are obtained from

  https://git.kernel.org/pub/scm/linux/kernel/git/firmware/linux-firmware.git

The firmware/regulatory.db database is obtained from

  https://git.kernel.org/pub/scm/linux/kernel/git/sforshee/wireless-regdb.git

The firmware/bios/ directory contains a flash image for the deployed version
of the manufacturer's UEFI BIOS.


Partitioning and filesystems
----------------------------

Create the GPT label and partitions:

  sfdisk /dev/nvme0n1 <<< 'label: gpt'
  sfdisk -a /dev/nvme0n1 <<< 'size=512M, type=uefi, name=boot'
  sfdisk -a /dev/nvme0n1 <<< 'size=+, type=linux, name=root'

Make the EFI and root filesystems:

  mkfs.vfat -n boot /dev/nvme0n1p1
  mkfs.ext4 -L root -O project,quota /dev/nvme0n1p2

Copy the kernel from boot/linux.efi to both /boot/linux.efi and
/boot/efi/boot/bootx64.efi so the BIOS will use it as the default
bootloader for the drive.
